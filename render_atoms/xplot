#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Created on Tue 28 Nov 2023

@author: Enrico Pedretti

Small program to render an image using ASE and povray
"""
VERSION = 0.1

import sys
import argparse
from functions import start_rendering



def cli_parse():
    parser = argparse.ArgumentParser(
        description='Options for image rendering:'
        )

    parser.add_argument('--v', '--version', action='version', version='%(prog)s '+str(VERSION))

    parser.add_argument('filename', help='Can be in any format readable by ASE (e.g. POSCAR/CONTCAR/vasprun.xml, xyz, cif, pwi/pwo, xsf...). Can also be a trajectory.') 
    parser.add_argument('-i','--index', type=str, default='-1', 
                        help="Index of the frame to be rendered in a trajectory, e.g. '0' (first), '-1' (last), ':' (all), '::10' (one every 10 frames). Default = -1")
    parser.add_argument('-m','--movie', action='store_true', default=False, help='Create movie from the frames. Default = False')
    parser.add_argument('-f', '--framerate', type=int, default=10, help='Framerate of the movie (frames per second). Default = 10.')
    parser.add_argument('-np','--nopov', action='store_true', default=False, help='Do not use povray for rendering. Default = use povray')
    parser.add_argument('-w', '--width-resolution', type=int, default=700, help='Horizontal resolution in pixels. Defaul = 700')
    parser.add_argument('-r','--rotations', type=str, default='', 
                        help="List of rotations for the visualization, e.g. 10z,-90x. Default = '' (top view). If the first rotation has a negative angle, preceed it with a dummy rotation, e.g. 0z,-90x. Preset for front view: front.")
    parser.add_argument('-dc','--depth-cueing', action='store_true', default=False, help='Enable depth cueing.')
    parser.add_argument('-dci', '--depth-cueing-intensity', type=float, default=1, help='Depth cueing intensity (>=0, default=1).')
    parser.add_argument('-rc','--range-cut', nargs=2, type=float, help='Select range [zmin, zmax] to be displayed.')

    args = parser.parse_args()

    if args.rotations == 'front': args.rotations = '-90x'

    return args



def main():

    args = cli_parse()

    start_rendering(filename = args.filename,
                    index = args.index, 
                    movie = args.movie, 
                    framerate = args.framerate, 
                    povray = not args.nopov, 
                    width_res = args.width_resolution, 
                    rotations = args.rotations,
                    depth_cueing=args.depth_cueing,
                    depth_cueing_intensity=args.depth_cueing_intensity,
                    range_cut=args.range_cut)


if __name__ == '__main__':
    sys.exit(main())